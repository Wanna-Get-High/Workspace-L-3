package ressource;

import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;

// TODO: Auto-generated Javadoc
/**
 * The Class RessourceManager.
 *
 * @param <R> the generic type
 */
public abstract class RessourceManager<R> 
{
	
	/** The number of resource. */
	protected int nbResource;
	
	/** The number of disponible ressource. */
	protected int nbDispRessource;
	
	/** The disp ressource. */
	protected List<R> dispRessource;
	
	/** The Un disp ressource. */
	protected List<R> UnDispRessource;
	
	/**
	 * Instantiates a new ressource manager.
	 *
	 * @param ndr the ndr
	 */
	public RessourceManager(int ndr)
	{
		this.nbRessource = this.nbDispRessource = ndr;
		this.dispRessource = new LinkedList<R>();
		this.UnDispRessource = new LinkedList<R>();
		
		for (int i =0; i < this.nbRessource; i++)
		{
			this.dispRessource.add(this.createRessource());
		}
	}
	
	/**
	 * Creates the ressource.
	 *
	 * @return the r
	 */
	protected abstract R createRessource();
	
	/**
	 * Give ressource.
	 *
	 * @return the r
	 * @throws NoSuchElementException the no such element exception
	 */
	public R giveRessource() throws NoSuchElementException
	{
		if (!this.dispRessource.isEmpty())
		{
			R res;
			res = this.dispRessource.get(0);
			this.dispRessource.remove(0);
			this.UnDispRessource.add(res);
			
			this.nbDispRessource--;
			return res;
		}
		throw new NoSuchElementException();
	}
	
	/**
	 * Lib ressource.
	 *
	 * @param res the res
	 */
	public void libRessource(R res)
	{
		if (this.nbDispRessource < this.nbRessource)
		{
			this.dispRessource.add(res);
			this.UnDispRessource.remove(res);
			
			this.nbDispRessource++;
		}
	}
}
